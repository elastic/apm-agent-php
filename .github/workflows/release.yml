---
name: release

permissions:
  contents: read

on:
  workflow_dispatch:
  ### TODO: listen for tags, so for now let's test whether it works in dry run mode by default
  #create:
  #  tags: [ "v*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
        dockerfile:
          - "Dockerfile"
          - "Dockerfile.alpine"
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      DOCKERFILE: ${{ matrix.dockerfile }}
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: make -f .ci/Makefile build
      - name: Build parts for packages
        run: make -f .ci/Makefile generate-for-package
      - uses: actions/upload-artifact@v3
        with:
          name: package-parts
          path: src/ext/modules/*.so
  generate-packages:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: package-parts
          path: src/ext/modules
      - name: package
        run: make -C packaging package
      - name: package info
        run: make -C packaging info
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: |
            build/packages/*
            !build/packages/**/*.sha512

  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: build/packages
      - run: echo "Upload artifacts to gs://internal-ci-artifacts/apm-agent-php/<TAG>"

      - id: buildkite
        name: Run Release
        uses: elastic/apm-pipeline-library/.github/actions/buildkite@current
        with:
          vaultUrl: ${{ secrets.VAULT_ADDR }}
          vaultRoleId: ${{ secrets.VAULT_ROLE_ID }}
          vaultSecretId: ${{ secrets.VAULT_SECRET_ID }}
          pipeline: apm-agent-php-release
          waitFor: true
          printBuildLogs: true
          buildEnvVars: |
            dry_run=true

      - run: echo "Download artifacts from  gs://internal-ci-artifacts/apm-agent-php/<TAG>/signed-artifacts"

      - run: echo "Run tests"

      - run: echo "here is no approval input"

      - run: echo "Publish draft release"

      - run: echo "Verify draft release checksum"

      - run: echo "Publish release (draft -> regular)"

      - if: ${{ success() }}
        uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          #channel: "#apm-agent-php"
          channel: "#on-week-oblt-productivity"
          message: |
            :runner: [${{ github.repository }}] Release *${{ github.ref_name }}* has been triggered in Buildkite: (<${{ steps.buildkite.outputs.build }}|build>)

      - if: ${{ failure() }}
        uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          #channel: "#apm-agent-php"
          channel: "#on-week-oblt-productivity"
          message: |
            :ghost: [${{ github.repository }}] Release *${{ github.ref_name }}* didn't get triggered in Buildkite.
            Build: (<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|here>)
