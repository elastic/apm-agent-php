ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/php[elastic.co]
endif::[]

[[configuration]]
== Configuration

You can utilize configuration options to adapt the Elastic APM agent to your needs.
One way to do this is to configure settings in an `elastic_apm.ini` file:

[source,ini]
----
elastic_apm.server_url = http://localhost:8200
elastic_apm.service_name = "Unknown PHP service"
elastic_apm.log_level = 0
----

The agent can also be configured at runtime with the following PHP code:

[source,php]
----
ini_set('elastic_apm.server_url', 'http://localhost:8200');
ini_set('elastic_apm.service_name', 'My_Test_Service');
ini_set('elastic_apm.log_level', 'DEBUG');
----

[float]
[[configure-ess]]
=== {ess} on {ecloud}

The agent can be configured to send data to an {ess-product}[{ess} APM instance] by
configuring the `elastic_apm.server_url` and `elastic_apm.secret_token` found in the APM section of {ecloud}:

[role="screenshot"]
image::./images/elastic_cloud_apm_config.png[Example view of Elastic Cloud host and secret_token]

Configure in `elastic_apm.ini`:

[source,ini]
----
elastic_apm.server_url = APM_SERVER_URL
elastic_apm.secret_token = TOKEN
elastic_apm.service_name = SERVICE_NAME
----

Or, with the following PHP code:

[source,php]
----
ini_set('elastic_apm.server_url', 'APM_SERVER_URL');
ini_set('elastic_apm.secret_token', 'TOKEN');
----

[float]
[[configure-logging]]
=== Logging

Available log levels are:

[source,text]
----
OFF
CRITICAL
ERROR
WARNING
NOTICE
INFO
DEBUG
TRACE
----
`OFF` is only used to disable agent logging.
There cannot be log records with level `OFF`.

For example, if you specify `WARNING` log level, only log records with levels `WARNING`, `ERROR` and `CRITICAL`
will be emitted.

The agent supports logging to the following sinks: syslog and stderr.
You can control the level of logging for individual sinks with the
`elastic_apm.log_level_syslog` and `elastic_apm.log_level_stderr` keys.
When a sink-specific logging level is not set explicitly, the fallback setting,
`elastic_apm.log_level`, will be used.

For example, the following configuration sets the log level to `NOTICE` for all the sinks:

[source,ini]
----
elastic_apm.log_level=NOTICE
----

Alternatively, the following configuration sets log level to `NOTICE` for all the sinks except for `syslog`, whose log level is set to `TRACE`.

[source,ini]
----
elastic_apm.log_level=NOTICE
elastic_apm.log_level_syslog=TRACE
----

[[configuration-reference]]
=== Configuration reference

[float]
[[config-api-key]]
==== `api_key`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_API_KEY` | `elastic_apm.api_key`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

This string is used to ensure that only your agents can send data to your APM Server.
You must have created the API key using the APM Server's {apm-server-ref-v}/api-key.html[command line tool].

<<config-api-key>> is an alternative to <<config-secret-token>>.
If both <<config-secret-token>> and <<config-api-key>> are configured
then <<config-api-key>> has precedence and <<config-secret-token>> is ignored.

NOTE: This feature is fully supported in the APM Server versions >= 7.6.

WARNING: The `API key` is sent as plain-text in every request to the server, so you should also secure
your communications using HTTPS. Unless you do so, your API Key could be observed by an attacker.

[float]
[[config-enabled]]
==== `enabled`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_ENABLED` | `elastic_apm.enabled`
|============

[options="header"]
|============
| Default                          | Type
| false       | Boolean
|============

Setting to false will completely disable the agent.

[float]
[[config-environment]]
==== `environment`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_ENVIRONMENT` | `elastic_apm.environment`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

The name of the environment this service is deployed in, e.g. "production" or "staging".

Environments allow you to easily filter data on a global level in the APM app.
It's important to be consistent when naming environments across agents.
See {apm-app-ref}/filters.html#environment-selector[environment selector] in the Kibana UI for more information.

NOTE: This feature is fully supported in the APM app in Kibana versions >= 7.2.
You must use the query bar to filter for a specific environment in versions prior to 7.2.

[float]
[[config-log-level]]
==== `log_level`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_LOG_LEVEL` | `elastic_apm.log_level`
|============

[options="header"]
|============
| Default                          | Type
| None       | Log level
|============

Fallback configuration setting to control the logging level for the agent.
This setting has effect for the sink when sink specific option is not set explicitly.
See <<configure-logging>> for details.

[float]
[[config-log-level-stderr]]
==== `log_level_stderr`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_LOG_LEVEL_STDERR` | `elastic_apm.log_level_stderr`
|============

[options="header"]
|============
| Default                          | Type
| `CRITICAL`       | Log level
|============

The logging level for `stderr` logging sink.
See <<configure-logging>> for details.

[float]
[[config-log-level-syslog]]
==== `log_level_syslog`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_LOG_LEVEL_SYSLOG` | `elastic_apm.log_level_syslog`
|============

[options="header"]
|============
| Default                          | Type
| `NOTICE`       | Log level
|============

The logging level for `syslog` logging sink.
See <<configure-logging>> for details.

[float]
[[config-secret-token]]
==== `secret_token`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SECRET_TOKEN` | `elastic_apm.secret_token`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

This string is used to ensure that only your agents can send data to your APM Server.
Both the agents and the APM Server have to be configured with the same secret token.
Use this setting if the APM Server requires a token, like in {ess}.

<<config-secret-token>> is an alternative to <<config-api-key>>.
If both <<config-secret-token>> and <<config-api-key>> are configured
then <<config-api-key>> has precedence and <<config-secret-token>> is ignored.

[float]
[[config-server-url]]
==== `server_url`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVER_URL` | `elastic_apm.server_url`
|============

[options="header"]
|============
| Default                          | Type
| `http://localhost:8200`       | String
|============

The URL for your APM Server. The URL must be fully qualified, including protocol (`http` or `https`) and port.

[float]
[[config-service-name]]
==== `service_name`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVICE_NAME` | `elastic_apm.service_name`
|============

[options="header"]
|============
| Default                          | Type
| `Unnamed PHP service`       | String
|============

This is used to keep all the errors and transactions of your service together
and it is the primary filter in the Elastic APM user interface.

NOTE: The service name must conform to this regular expression: `^[a-zA-Z0-9 _-]+$`.
In less regexy terms: your service name must only contain characters from the ASCII alphabet,
numbers, dashes, underscores and spaces.
Characters in service name which don't match regular expression will be replaced by `_` (underscore) character.

[float]
[[config-service-version]]
==== `service_version`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVICE_VERSION` | `elastic_apm.service_version`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

The version of the currently deployed service. If you donâ€™t version your deployments,
the recommended value for this field is the commit identifier of the deployed revision, e.g.,
the output of git rev-parse HEAD.

[float]
[[config-transaction-sample-rate]]
==== `transaction_sample_rate`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_TRANSACTION_SAMPLE_RATE` | `elastic_apm.transaction_sample_rate`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

By default, the agent will sample every transaction (e.g., a request to your service).
To reduce overhead and storage requirements, you can set the sample rate to a value between 0.0 and 1.0.
The agent will still record the overall time and result for unsampled transactions,
but not context information, labels, or spans.

[float]
[[config-verify-server-cert]]
==== `verify_server_cert`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_VERIFY_SERVER_CERT` | `elastic_apm.verify_server_cert`
|============

[options="header"]
|============
| Default                          | Type
| `true`       | Boolean
|============

By default, the agent verifies the SSL certificate if you use an HTTPS connection to the APM server.
The verification can be disabled by changing this setting to `false`.
