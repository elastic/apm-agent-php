ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/php[elastic.co].
endif::[]

[[configuration]]
== Configuration

Utilize configuration options to adapt the Elastic APM agent to your needs.
One way to configure settings is with the `php.ini` file:

[source,ini]
----
elastic_apm.server_url=http://localhost:8200
elastic_apm.service_name="My service"
----

The agent can also be configured using environment variables:

[source,shell]
----
export ELASTIC_APM_SERVER_URL="http://localhost:8200"
export ELASTIC_APM_SERVICE_NAME="My service"
----

NOTE: If you use environment variables to configure the agent, make sure the process running your PHP code inherits those environment variables after they were set.


[float]
[[configure-ess]]
=== {ess} on {ecloud}

The agent can be configured to send data to an {ess-product}[{ess} APM instance] by
setting the <<config-server-url>> and <<config-secret-token>> options
to the corresponding values found in the APM & Fleet section of {ecloud}.

Configure the agent, for example via `php.ini`:

[source,ini]
----
elastic_apm.server_url=APM_SERVER_URL
elastic_apm.secret_token=TOKEN
elastic_apm.service_name=SERVICE_NAME
----

[float]
[[configure-logging]]
=== Logging

The easiest way to configure the logging is by using the <<config-log-level-syslog>> configuration option.

Available log levels are:

[source,text]
----
OFF
CRITICAL
ERROR
WARNING
INFO
DEBUG
TRACE
----
For example, if you specify a `WARNING` log level, only log records with levels `WARNING`, `ERROR`, and `CRITICAL`
will be emitted.

`OFF` is only used to disable agent logging.

The agent supports logging to the following sinks: syslog and stderr.
Control the level of logging for individual sinks with the
<<config-log-level-syslog>> and <<config-log-level-stderr>> options.
When a sink-specific logging level is not explicitly set, the fallback setting
<<config-log-level>> will be used.

For example, the following configuration sets the log level to `WARNING` for all the sinks:

[source,ini]
----
elastic_apm.log_level=WARNING
----

Alternatively, the following configuration sets log level to `WARNING` for all the sinks
except for `syslog`, where the log level is set to `TRACE`.

[source,ini]
----
elastic_apm.log_level=WARNING
elastic_apm.log_level_syslog=TRACE
----

[float]
[[configure-wildcard]]
=== Wildcard

Some options (for example <<config-url-groups>>) support use of wildcard.
A valid value for such configuration options is a comma separated list of wildcard expressions.
Only the wildcard `*`, which matches zero or more characters, is supported.

Examples: `*foo*`, `/foo/*/bar, /*/baz*`.

Matching is case insensitive by default.
Prepending an element with `(?-i)` makes the matching case sensitive.
For example `(?-i)/bar, /foo` matches /bar` and `/FOO` `but it doesn't match `/BAR`
on the other hand `(?-i)/bar, (?-i)/foo` matches `/bar` and `/foo`
but doesn't match neither `/BAR` nor `/FOO`.

Whitespace around commas separating wildcard expressions in the list is ignored.
For example `foo , bar` is the same as `foo,bar`.
On the other hand whitespace inside wildcard expressions is significant.
For example `*a b*` matches a string only if it contains `a` followed by space and then `b`.

The input string is matched against wildcard expressions in the order they are listed
and the first expression that matches is selected.

When configuration option is intended to matched against a input URL
(for example <<config-url-groups>> and <<config-transaction-ignore-urls>>)
only path part of the URL is tested against wildcard expressions.
Other parts of the URL (such as query string, etc.) are not taken into account
so including them in the wildcard expressions might lead to unexpected result.
For example `/user/*` matches `http://my_site.com/user/Alice?lang=en`
while `/user/*?lang=*` does not match `http://my_site.com/user/Alice?lang=en`

[[configuration-reference]]
=== Configuration reference

[float]
[[config-api-key]]
==== `api_key`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_API_KEY` | `elastic_apm.api_key`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

This string is used to ensure that only your agents can send data to your APM Server.
You must have created the API key using the APM Server {apm-guide-ref}/api-key.html[command line tool].

<<config-api-key>> is an alternative to <<config-secret-token>>.
If both <<config-secret-token>> and <<config-api-key>> are configured,
then <<config-api-key>> has precedence and <<config-secret-token>> is ignored.

NOTE: This feature is fully supported in the APM Server versions >= 7.6.

WARNING: The `api_key` value is sent as plain-text in every request to the server, so you should also secure
your communications using HTTPS. Unless you do so, your API Key could be observed by an attacker.

[float]
[[config-breakdown-metrics]]
==== `breakdown_metrics`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_BREAKDOWN_METRICS` | `elastic_apm.breakdown_metrics`
|============

[options="header"]
|============
| Default                          | Type
| true       | Boolean
|============

If this configuration option is set to `true` the agent will collect and report
breakdown metrics (`span.self_time`) used for "Time spent by span type" chart.
Set it to `false` to disable the collection and reporting of
breakdown metrics, which can reduce the overhead of the agent.

NOTE: This feature requires APM Server and Kibana >= 7.3.

[float]
[[config-disable-instrumentations]]
==== `disable_instrumentations`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_DISABLE_INSTRUMENTATIONS` | `elastic_apm.disable_instrumentations`
|============

[options="header"]
|============
| Default                          | Type
| empty list       | List of strings
|============

A comma-separated list of wildcard expressions to match
instrumentation names which should be disabled.
When an instrumentation is disabled, no spans will be created for that instrumentation.
An instrumentation may match more than one name -
for example PDO instrumentation matches both `db` and  `pdo`.

Valid instrumentation names are `curl`, `db`, `http-client`, `pdo`.

[float]
[[config-disable-send]]
==== `disable_send`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_DISABLE_SEND` | `elastic_apm.disable_send`
|============

[options="header"]
|============
| Default                          | Type
| false       | Boolean
|============

If set to `true`, the agent will work as usual, except for any task requiring
communication with the APM server. Events will be dropped and the agent won't be
able to receive central configuration, which means that any other configuration
cannot be changed in this state without restarting the service.  Example uses
for this setting are: maintaining the ability to create traces and log
trace/transaction/span IDs through the log correlation feature, and getting
automatic distributed tracing via the https://w3c.github.io/trace-context/[W3C HTTP headers].

[float]
[[config-enabled]]
==== `enabled`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_ENABLED` | `elastic_apm.enabled`
|============

[options="header"]
|============
| Default                          | Type
| true       | Boolean
|============

Setting to false will completely disable the agent.

[float]
[[config-environment]]
==== `environment`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_ENVIRONMENT` | `elastic_apm.environment`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

The name of the environment this service is deployed in, e.g. "production" or "staging".

Environments allow you to easily filter data on a global level in the APM app.
It's important to be consistent when naming environments across agents.
See {apm-app-ref}/filters.html#environment-selector[environment selector] in the Kibana UI for more information.

NOTE: This feature is fully supported in the APM app in Kibana versions >= 7.2.
You must use the query bar to filter for a specific environment in versions prior to 7.2.

[float]
[[config-hostname]]
==== `hostname`

[options="header"]
|============
| Hostname variable name      | Option name in `php.ini`
| `ELASTIC_APM_HOSTNAME` | `elastic_apm.hostname`
|============

[options="header"]
|============
| Default                          | Type
| the local machine's host name       | String
|============

This option allows for the reported host name to be configured.
If this option is not set the local machine's host name is used.

[float]
[[config-log-level]]
==== `log_level`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_LOG_LEVEL` | `elastic_apm.log_level`
|============

[options="header"]
|============
| Default                          | Type
| None       | Log level
|============

A fallback configuration setting to control the logging level for the agent.
Only used when a sink-specific option is not explicitly set.
See <<configure-logging>> for details.

[float]
[[config-log-level-stderr]]
==== `log_level_stderr`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_LOG_LEVEL_STDERR` | `elastic_apm.log_level_stderr`
|============

[options="header"]
|============
| Default                          | Type
| `CRITICAL`       | Log level
|============

The logging level for `stderr` logging sink.
See <<configure-logging>> for details.

[float]
[[config-log-level-syslog]]
==== `log_level_syslog`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_LOG_LEVEL_SYSLOG` | `elastic_apm.log_level_syslog`
|============

[options="header"]
|============
| Default                          | Type
| `INFO`       | Log level
|============

The logging level for `syslog` logging sink.
See <<configure-logging>> for details.

[float]
[[config-secret-token]]
==== `secret_token`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SECRET_TOKEN` | `elastic_apm.secret_token`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

This string is used to ensure that only your agents can send data to your APM Server.
Both the agents and the APM Server have to be configured with the same secret token.

See {apm-guide-ref}/secret-token.html[the relevant APM Server's documentation]
on how to configure APM Server's secret token.

Use this setting if the APM Server requires a token, like in {ess}.

<<config-secret-token>> is an alternative to <<config-api-key>>.
If both <<config-secret-token>> and <<config-api-key>> are configured
then <<config-api-key>> has precedence and <<config-secret-token>> is ignored.

WARNING: The `secret_token` is sent as plain-text in every request to the server, so you should also secure
your communications using HTTPS. Unless you do so, your secret token could be observed by an attacker.

[float]
[[config-server-timeout]]
==== `server_timeout`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVER_TIMEOUT` | `elastic_apm.server_timeout`
|============

[options="header"]
|============
| Default                          | Type
| `30s`       | Duration
|============

If a request sending events to the APM server takes longer than the configured timeout,
the request is canceled and the events are discarded.

This configuration option supports the duration suffixes: `ms`, `s` and `m`.
For example: `10s`.
This option's default unit is `s`, so `5` is interpreted as `5s`.

If the value is `0` (or `0ms`, `0s`, etc.) the timeout for sending events to the APM Server is disabled.

Negative values are invalid and result in the default value being used instead.

[float]
[[config-server-url]]
==== `server_url`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVER_URL` | `elastic_apm.server_url`
|============

[options="header"]
|============
| Default                          | Type
| `http://localhost:8200`       | String
|============

The URL for your APM Server. The URL must be fully qualified, including protocol (`http` or `https`) and port.

[float]
[[config-service-name]]
==== `service_name`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVICE_NAME` | `elastic_apm.service_name`
|============

[options="header"]
|============
| Default                          | Type
| `unknown-php-service`       | String
|============

This is used to keep all the errors and transactions of your service together
and is the primary filter in the Elastic APM user interface.

NOTE: The service name must conform to this regular expression: `^[a-zA-Z0-9 _-]+$`.
In other words, a service name must only contain characters from the ASCII alphabet,
numbers, dashes, underscores, and spaces.
Characters in service name that don't match regular expression will be replaced by `_` (underscore) character.

[float]
[[config-service-node-name]]
==== `service_node_name`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVICE_NODE_NAME` | `elastic_apm.service_node_name`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

If it's set, this name is used to distinguish between different nodes of a service.
If it's not set, data aggregations will be done based on the reported
hostname (automatically discovered or manually configured using <<config-hostname>>).

[float]
[[config-service-version]]
==== `service_version`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_SERVICE_VERSION` | `elastic_apm.service_version`
|============

[options="header"]
|============
| Default                          | Type
| None       | String
|============

The version of the currently deployed service. If your deployments are not versioned,
the recommended value for this field is the commit identifier of the deployed revision, e.g.,
the output of git rev-parse HEAD.

[float]
[[config-transaction-ignore-urls]]
==== `transaction_ignore_urls`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_TRANSACTION_IGNORE_URLS` | `elastic_apm.transaction_ignore_urls`
|============

[options="header"]
|============
| Default                          | Type
| empty list       | List of wildcard expressions
|============

This option instructs the agent to ignore requests with certain URLs
by not to creating transactions for those requests.
It only affects automatic creation of transactions by the agent
but user can still create transactions manually by using <<public-api, agent's public API>>.

See <<configure-wildcard>> section for more details on how to use wildcard expressions.

[float]
[[config-transaction-max-spans]]
==== `transaction_max_spans`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_TRANSACTION_MAX_SPANS` | `elastic_apm.transaction_max_spans`
|============

[options="header"]
|============
| Default                          | Type
| 500       | Integer
|============

This limits the amount of spans that are recorded per transaction.
This is helpful in cases where a transaction creates a very high amount of spans,
for example, thousands of SQL queries.
Setting an upper limit helps prevent overloading the Agent and APM server in these edge cases.

If the value is `0` no spans will be collected.

Negative values are invalid and result in the default value being used instead.

[float]
[[config-transaction-sample-rate]]
==== `transaction_sample_rate`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_TRANSACTION_SAMPLE_RATE` | `elastic_apm.transaction_sample_rate`
|============

[options="header"]
|============
| Default                          | Type
| 1.0       | Floating-point number
|============

By default, the agent will sample every transaction (e.g., a request to your service).
To reduce overhead and storage requirements, set the sample rate to a value between `0.0` and `1.0`.
The agent still records the overall time and result for unsampled transactions,
but not context information, labels, or spans.

[float]
[[config-verify-server-cert]]
==== `verify_server_cert`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_VERIFY_SERVER_CERT` | `elastic_apm.verify_server_cert`
|============

[options="header"]
|============
| Default                          | Type
| `true`       | Boolean
|============

By default, the agent verifies the SSL certificate if you use an HTTPS connection to the APM server.
The verification can be disabled by changing this setting to `false`.

[float]
[[config-url-groups]]
==== `url_groups`

[options="header"]
|============
| Environment variable name      | Option name in `php.ini`
| `ELASTIC_APM_URL_GROUPS` | `elastic_apm.url_groups`
|============

[options="header"]
|============
| Default                          | Type
| empty list       | List of wildcard expressions
|============

With this option, you can group several URL paths together by using wildcard expressions
like `/user/*` - this way `/user/Alice` and `/user/Bob` will be mapped to transaction name `/user/*`.

See <<configure-wildcard>> section for more details on how to use wildcard expressions.
